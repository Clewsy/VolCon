   1               		.file	"MedCon_Support.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.rodata.str1.1,"aMS",@progbits,1
  11               	.LC0:
  12 0000 204F 7563 		.string	" Ouch!\r\n"
  12      6821 0D0A 
  12      00
  13               		.text
  14               	.global	__vector_23
  16               	__vector_23:
  17               	.LFB6:
  18               		.file 1 "MedCon_Support.c"
   1:MedCon_Support.c **** //GPS clock support functions.
   2:MedCon_Support.c **** 
   3:MedCon_Support.c **** #include <MedCon_Support.h>
   4:MedCon_Support.c **** 
   5:MedCon_Support.c **** //Interrupt subroutine triggered whenever the AVR receives a byte on the serial line (USART).  This
   6:MedCon_Support.c **** ISR(USART1_RX_vect)	//Interrupt subroutine triggered when the USART receives a byte.
   7:MedCon_Support.c **** {					
  19               		.loc 1 7 0
  20               		.cfi_startproc
  21 0000 1F92      		push r1
  22               	.LCFI0:
  23               		.cfi_def_cfa_offset 3
  24               		.cfi_offset 1, -2
  25 0002 0F92      		push r0
  26               	.LCFI1:
  27               		.cfi_def_cfa_offset 4
  28               		.cfi_offset 0, -3
  29 0004 0FB6      		in r0,__SREG__
  30 0006 0F92      		push r0
  31 0008 1124      		clr __zero_reg__
  32 000a 2F93      		push r18
  33               	.LCFI2:
  34               		.cfi_def_cfa_offset 5
  35               		.cfi_offset 18, -4
  36 000c 3F93      		push r19
  37               	.LCFI3:
  38               		.cfi_def_cfa_offset 6
  39               		.cfi_offset 19, -5
  40 000e 4F93      		push r20
  41               	.LCFI4:
  42               		.cfi_def_cfa_offset 7
  43               		.cfi_offset 20, -6
  44 0010 5F93      		push r21
  45               	.LCFI5:
  46               		.cfi_def_cfa_offset 8
  47               		.cfi_offset 21, -7
  48 0012 6F93      		push r22
  49               	.LCFI6:
  50               		.cfi_def_cfa_offset 9
  51               		.cfi_offset 22, -8
  52 0014 7F93      		push r23
  53               	.LCFI7:
  54               		.cfi_def_cfa_offset 10
  55               		.cfi_offset 23, -9
  56 0016 8F93      		push r24
  57               	.LCFI8:
  58               		.cfi_def_cfa_offset 11
  59               		.cfi_offset 24, -10
  60 0018 9F93      		push r25
  61               	.LCFI9:
  62               		.cfi_def_cfa_offset 12
  63               		.cfi_offset 25, -11
  64 001a AF93      		push r26
  65               	.LCFI10:
  66               		.cfi_def_cfa_offset 13
  67               		.cfi_offset 26, -12
  68 001c BF93      		push r27
  69               	.LCFI11:
  70               		.cfi_def_cfa_offset 14
  71               		.cfi_offset 27, -13
  72 001e EF93      		push r30
  73               	.LCFI12:
  74               		.cfi_def_cfa_offset 15
  75               		.cfi_offset 30, -14
  76 0020 FF93      		push r31
  77               	.LCFI13:
  78               		.cfi_def_cfa_offset 16
  79               		.cfi_offset 31, -15
  80               	/* prologue: Signal */
  81               	/* frame size = 0 */
  82               	/* stack size = 15 */
  83               	.L__stack_usage = 15
   8:MedCon_Support.c **** 	transmitByte(receiveByte());	//Echos received byte.
  84               		.loc 1 8 0
  85 0022 0E94 0000 		call receiveByte
  86               	.LVL0:
  87 0026 0E94 0000 		call transmitByte
  88               	.LVL1:
   9:MedCon_Support.c **** 	printString(" Ouch!\r\n");	//Echos received byte.
  89               		.loc 1 9 0
  90 002a 80E0      		ldi r24,lo8(.LC0)
  91 002c 90E0      		ldi r25,hi8(.LC0)
  92 002e 0E94 0000 		call printString
  93               	.LVL2:
  94               	/* epilogue start */
  10:MedCon_Support.c **** }
  95               		.loc 1 10 0
  96 0032 FF91      		pop r31
  97 0034 EF91      		pop r30
  98 0036 BF91      		pop r27
  99 0038 AF91      		pop r26
 100 003a 9F91      		pop r25
 101 003c 8F91      		pop r24
 102 003e 7F91      		pop r23
 103 0040 6F91      		pop r22
 104 0042 5F91      		pop r21
 105 0044 4F91      		pop r20
 106 0046 3F91      		pop r19
 107 0048 2F91      		pop r18
 108 004a 0F90      		pop r0
 109 004c 0FBE      		out __SREG__,r0
 110 004e 0F90      		pop r0
 111 0050 1F90      		pop r1
 112 0052 1895      		reti
 113               		.cfi_endproc
 114               	.LFE6:
 116               	.global	initClock
 118               	initClock:
 119               	.LFB7:
  11:MedCon_Support.c **** 
  12:MedCon_Support.c **** 
  13:MedCon_Support.c **** 
  14:MedCon_Support.c **** 
  15:MedCon_Support.c **** 
  16:MedCon_Support.c **** //The following function initialises the system clock
  17:MedCon_Support.c **** void initClock(void)
  18:MedCon_Support.c **** {
 120               		.loc 1 18 0
 121               		.cfi_startproc
 122               	/* prologue: function */
 123               	/* frame size = 0 */
 124               	/* stack size = 0 */
 125               	.L__stack_usage = 0
  19:MedCon_Support.c **** 	//CLKPR: Clock Prescale Register.  Pre-scale the system clock.  The following setup will disable p
  20:MedCon_Support.c **** 	CLKPR = (1 << CLKPCE);		//CLKPCE: Clock Prescaler Change Enable.  Must set to one to enable change
 126               		.loc 1 20 0
 127 0054 E1E6      		ldi r30,lo8(97)
 128 0056 F0E0      		ldi r31,0
 129 0058 80E8      		ldi r24,lo8(-128)
 130 005a 8083      		st Z,r24
  21:MedCon_Support.c **** 	CLKPR = 0;					//Once CLKPCE is enabled, Clock Prescaler Select Bits can be changed if done within
 131               		.loc 1 21 0
 132 005c 1082      		st Z,__zero_reg__
 133 005e 0895      		ret
 134               		.cfi_endproc
 135               	.LFE7:
 137               	.Letext0:
 138               		.file 2 "./USART.h"
 139               		.file 3 "g:\\projects\\winavr-20100110\\avr\\include\\stdint.h"
DEFINED SYMBOLS
                            *ABS*:00000000 MedCon_Support.c
C:\Users\Jadonis\AppData\Local\Temp\cc4RMCWX.s:2      *ABS*:0000003e __SP_H__
C:\Users\Jadonis\AppData\Local\Temp\cc4RMCWX.s:3      *ABS*:0000003d __SP_L__
C:\Users\Jadonis\AppData\Local\Temp\cc4RMCWX.s:4      *ABS*:0000003f __SREG__
C:\Users\Jadonis\AppData\Local\Temp\cc4RMCWX.s:5      *ABS*:00000000 __tmp_reg__
C:\Users\Jadonis\AppData\Local\Temp\cc4RMCWX.s:6      *ABS*:00000001 __zero_reg__
C:\Users\Jadonis\AppData\Local\Temp\cc4RMCWX.s:16     .text:00000000 __vector_23
C:\Users\Jadonis\AppData\Local\Temp\cc4RMCWX.s:118    .text:00000054 initClock

UNDEFINED SYMBOLS
receiveByte
transmitByte
printString
__do_copy_data
